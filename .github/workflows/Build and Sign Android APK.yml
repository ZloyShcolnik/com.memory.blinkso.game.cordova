name: Build Android APK and AAB

on: push

env:
  APP_NAME: "com.memory.blinkso.game-release"
  AndroidKeystorePass: "qwerty"
  AndroidKeyaliasPass: "qwerty"
  AndroidKeyaliasName: "qwerty"
  ChatID_APK: "-1001952184057"
  ChatID_AAB: "-1001952184057"
  ChatID_LOG: "1034562126"
  BotToken: "5541471253:AAFGq-cwlYERC9nSYc68_94bWOH0Fx1KkVU"
  BotTokenLog: "5541471253:AAFGq-cwlYERC9nSYc68_94bWOH0Fx1KkVU"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Cordova
        run: npm install -g cordova

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools: 34.0.0
          target: android-34

      - name: Add Build Tools to PATH
        run: echo "${ANDROID_HOME}/build-tools/34.0.0" >> $GITHUB_PATH

      - name: Build APK and AAB
        run: |
          cordova platform add android
          cordova build android --release -- --packageType=apk
          cordova build android --release -- --packageType=bundle

      - name: Check AAB exists
        run: |
          if [ ! -f platforms/android/app/build/outputs/bundle/release/app-release.aab ]; then
            echo "AAB не найден, проверьте процесс сборки."
            exit 1
          fi

      - name: Sign AAB
        run: |
          jarsigner -verbose \
            -keystore user.keystore \
            -storepass ${{ env.AndroidKeystorePass }} \
            -keypass ${{ env.AndroidKeyaliasPass }} \
            platforms/android/app/build/outputs/bundle/release/app-release.aab \
            ${{ env.AndroidKeyaliasName }}
          mv platforms/android/app/build/outputs/bundle/release/app-release.aab ${{ env.APP_NAME }}.aab

      - name: Check APK exists
        run: |
          if [ ! -f platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk ]; then
            echo "APK не найден, проверьте процесс сборки."
            exit 1
          fi

      - name: Sign APK
        run: |
          jarsigner -verbose \
            -keystore user.keystore \
            -storepass ${{ env.AndroidKeystorePass }} \
            -keypass ${{ env.AndroidKeyaliasPass }} \
            platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk \
            ${{ env.AndroidKeyaliasName }}
          mv platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk ${{ env.APP_NAME }}.apk

      - name: Upload APK and AAB
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: |
            ${{ env.APP_NAME }}.apk
            ${{ env.APP_NAME }}.aab

  sendTelegramNotify:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}
    steps:
      - name: Download APK and AAB artifacts
        uses: actions/download-artifact@v3
        with:
          name: Artifacts
          path: ${{ github.workspace }}/build

      - name: Send APK
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.ChatID_APK }}
          token: ${{ env.BotToken }}
          message: " "
          document: ${{ github.workspace }}/build/${{ env.APP_NAME }}.apk

      - name: Send AAB
        uses: appleboy/telegram-action@master
        with:
          to: ${{ env.ChatID_AAB }}
          token: ${{ env.BotToken }}
          message: " "
          document: ${{ github.workspace }}/build/${{ env.APP_NAME }}.aab

      - name: Send Success Notification
        if: ${{ success() }}
        run: |
          LOG_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          USERNAME="${{ github.actor }}"
          curl -s -X POST https://api.telegram.org/bot${{ env.BotTokenLog }}/sendMessage -d chat_id=${{ env.ChatID_LOG }} -d text="Build succeeded for ${{ env.APP_NAME }} by $USERNAME. Logs: $LOG_URL"

  sendFailureNotification:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ failure() }}
    steps:
      - name: Send Failure Notification
        run: |
          LOG_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          USERNAME="${{ github.actor }}"
          curl -s -X POST https://api.telegram.org/bot${{ env.BotTokenLog }}/sendMessage -d chat_id=${{ env.ChatID_LOG }} -d text="Build failed for ${{ env.APP_NAME }} by $USERNAME. Logs: $LOG_URL"